rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Function to check if the request is coming from a Cloud Function
    function isRequestFromCloudFunction() {
      return request.auth.token.firebase.sign_in_provider == 'custom';
    }

    // Function to check if user is admin
    function isAdmin() {
      return request.auth.token.admin == true;
    }

    // Allow users to read their own colony and perform queries on uid field
    match /colony/v1/colonies/{colonyId} {
      allow read: if request.auth != null;
      allow write: if isRequestFromCloudFunction();
      // Allow querying colonies by uid
      allow list: if request.auth != null && request.query.limit <= 10;
    }
    
    match /tiles/{tileId} {
      allow read: if request.auth != null;
      allow write: if isRequestFromCloudFunction();
      // Allow querying tiles by ID in batches for colony data
      allow list: if request.auth != null && request.query.limit <= 20 &&
                   'id' in request.query.where && request.query.where.id is list;
    }
    
    match /roadmapItems/{itemId} {
      // Allow read access to all authenticated users
      allow read: if request.auth != null;
      // Only allow writes from Cloud Functions
      allow write: if isRequestFromCloudFunction();
      // Allow listing and querying roadmap items
      allow list: if request.auth != null;
    }

    match /support_requests/{requestId} {
      // Allow admins to read all support requests and update them
      allow read, list, update: if request.auth != null && isAdmin();
      // Allow authenticated users to create support requests
      allow create: if request.auth != null;
      // Allow users to read their own support requests
      allow read: if request.auth != null && request.auth.uid == resource.data.userId;
    }
    
    // Default deny
    match /{document=**} {
      allow read, write: if false;
    }
  }
} 